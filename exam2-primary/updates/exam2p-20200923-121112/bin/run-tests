#!/bin/bash
# it runs all questionDD.vm-asm files through bin/assembler | bin/simulator
# it assumes that the executable is in the relevant lib/$(CS_ARCH)/bin directory

# set output and errors to buffering, disable error contexts
export CSTOOLS_IOBUFFER_OUTPUT=iob_buffer
export CSTOOLS_IOBUFFER_ERRORS=iob_buffer:iob_no_context
# kill off traces and logs
export CSTOOLS_IOBUFFER_TRACES=iob_disable
export CSTOOLS_IOBUFFER_LOGS=iob_disable

# nullglob is set so nothing runs if there are no test files
shopt -s nullglob

# look for commands to be run
if [ ! -x bin/assembler ] ; then
    echo "cannot find executable bin/assembler"
    exit -1
fi

if [ ! -x bin/simulator ] ; then
    echo "cannot find executable bin/simulator"
    exit -1
fi

# make sure the executables are executable
chmod 750 bin/* lib/*/bin/*

# if using an xterm - use headings and colour coded test results
if [ "${TERM:0:5}" == "xterm" -o "${TERM:0:2}" == "vt" ] ; then
	colorboldblack="\x1b[1;7;30m"
	colorboldgreen="\x1b[1;7;32m"
	colorboldred="\x1b[1;7;31m"
	undocolor="\x1b[0m"
else
	colorboldblack=
	colorboldgreen=
	colorboldred=
	undocolor=
fi

# test command1 | command2 and check exit status is 0
# test cat test | assembler > temp
# if temp OK, test cat temp | simulator test-it and compare to cat temp | simulator fake-it

# BANNER
echo -e "${colorboldblack}|      Test Input       |   Assembler   |       Simulator       |  Test Result  ${undocolor}"

# test all questionDD.vm-asm input files
for i in question[0-9][0-9].vm-asm ; do

    # work out require filenames
    input="${i%%.vm-asm}"
    vmasm="${input}.vm-asm"
    asm="${input}.asm"
    errors="${input}.errors"
    fake="${input}.fake"

    # give up on empty files
    if [ ! -s "${vmasm}" ] ; then
        echo "${vmasm} is empty"
        continue ;
    fi

    # dispose of temp output files
    rm -f ${asm} ${errors} ${fake}

    # run assembler over input
    testmessage="\" cat ${vmasm} | bin/assembler"
    cat ${vmasm} | bin/assembler > ${asm} 2> ${errors}

    # if output is empty it died ... move on to next question
    if [ ! -s ${asm} ] ; then
        echo -e "${testmessage}                         \" ${colorboldred} test failed ${undocolor}"
        rm -f ${asm} ${errors}
        continue
    fi

    # assembler worked so generate fake simulator output
    cat ${asm} | bin/simulator fake-it 2>&1 > ${fake}

    # simulate solution and compare to fake output
    testmessage="${testmessage} | bin/simulator test-it \""
    if cat ${asm} | bin/simulator test-it 2>&1 | diff - ${fake} > /dev/null 2> /dev/null ; then
        echo -e "${testmessage} ${colorboldgreen} test passed ${undocolor}"
    else
        echo -e "${testmessage} ${colorboldred} test failed ${undocolor}"
    fi

    # dispose of temp output files
    rm -f ${asm} ${errors} ${fake}
done
echo
